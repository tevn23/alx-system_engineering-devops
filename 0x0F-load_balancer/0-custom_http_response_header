#!/usr/bin/env bash
# This script configures a new Ubuntu machine with Nginx, sets up a custom 404 page,
# a 301 redirect, and adds a custom header to Nginx responses.

# Ensure the script is run as root
if [ "$(id -u)" -ne 0 ]; then
    echo "This script must be run as root."
    exit 1
fi

# Update package list and upgrade packages
echo "Updating package list and upgrading packages..."
apt update && apt -y upgrade

# Install Nginx if not already installed
if ! command -v nginx > /dev/null; then
    echo "Installing Nginx..."
    apt -y install nginx
fi

# Configure the firewall to allow Nginx traffic
ufw allow 'Nginx HTTP'

# Start Nginx if it's not already running
if ! pgrep -x "nginx" > /dev/null; then
    echo "Starting Nginx..."
    service nginx start
fi

# Set up the index page
echo "Setting up the index page..."
echo "Hello World!" > /var/www/html/index.nginx-debian.html

# Set up custom 404 page
echo "Setting up custom 404 page..."
echo "Ceci n'est pas une page" > /usr/share/nginx/html/404.html

# Modify the default Nginx site configuration
NGINX_CONF="/etc/nginx/sites-available/default"
echo "Configuring Nginx..."
sed -i '/listen 80 default_server;/a\\
    location /redirect_me {\\n\
        return 301 https://www.youtube.com/;\\n\
    }\\n\
    add_header X-Served-By \$hostname always;\\n\
    error_page 404 /404.html;\\n\
    location = /404.html {\\n\
        internal;\\n\
    }' "$NGINX_CONF"

# Reload Nginx to apply changes
echo "Reloading Nginx..."
if nginx -t; then
    service nginx reload
else
    echo "Nginx configuration error. Please check the configuration."
    exit 1
fi

# Verify Nginx is serving the default page
echo "Verifying Nginx setup..."
if curl -I http://localhost 2>/dev/null | grep -q "200 OK"; then
    echo "Nginx is running and serving the default page."
else
    echo "Nginx is not serving the default page. Please check the configuration."
    exit 1
fi

echo "Nginx setup completed successfully."
